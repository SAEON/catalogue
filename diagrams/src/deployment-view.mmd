flowchart TD

    User("User (frontend)") <--> nginx

    %% CentOS boundary
    subgraph CentOS_boundary ["CentOS 7.6"]

        nginx(Nginx)
        nginx --- client_container
        nginx --- proxy_container_1
        nginx --- proxy_container_2
        nginx --- proxy_container_3
        nginx --- proxy_container_4
        proxy_container_1 --- es_container
        proxy_container_2 --- es_container
        proxy_container_3 --- es_container
        proxy_container_4 --- es_container
        nginx --- api_container

        %% Docker Engine boundary
        subgraph Docker_boundary ["Docker Engine"]

            %% Docker container boundaries
            subgraph client_container [React.js Client]
                client("nginx:alpine")
            end
            subgraph api_container [API]
                api("node:16.10")
            end
            subgraph proxy_container_1 [Proxy]
                ClientProxy2("node:16.10")
            end     
            subgraph proxy_container_2 [Proxy]
                ClientProxy3("node:16.10")
            end    
            subgraph proxy_container_3 [Proxy]
                ClientProxy4("node:16.10")
            end
            subgraph proxy_container_4 [Proxy]
                ApiProxy("node:16.10")
            end
            subgraph es_container ["Elasticsearch"]
                Elasticsearch(docker.elastic.co/elasticsearch/elasticsearch:7.10.2)
            end
            subgraph kibana_container[kibana]
                Kibana("docker.elastic.co/kibana/kibana:7.10.2")
            end
            subgraph mongo_container [MongoDB]
                Mongo[("mongo:5.0.2")]
            end    
            subgraph postgis_container [PostGIS]
                PostGIS[("postgis/postgis:13-3.1<br />(src/postgis)")]
            end
            subgraph gdal_container [GDAL]
                GDAL("osgeo/gdal:latest")
            end

            %% Topology
            api_container ---- es_container
            api_container ---- mongo_container
            api_container ---- postgis_container
            api_container ---- gdal_container

        end
            
        docker_interface("Docker/Host binding to 0.0.0.0<br />Accessible on VPN")
        api_container --- docker_interface
        mongo_container ---- docker_interface
        postgis_container ---- docker_interface
        es_container --- docker_interface
        kibana_container --- docker_interface
    end

    docker_interface <--> User2("User (backend)")