name: deploy@next

on:
  push:
    branches:
      - deployment-refactor

env:
  REGISTRY: ghcr.io
  API_IMAGE_NAME: saeon/sdp-api
  PROXY_IMAGE_NAME: saeon/sdp-proxy
  CLIENTS_IMAGE_NAME: saeon/sdp-clients
  BRANCH_REF: deployment-refactor

jobs:
  build-api:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Check out source code (shared)
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH_REF }}

      - name: Configure ODP integration filter
        run: |
          cp deploy/next/config/odp-filter.js src/api/odp-filter.js

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.API_IMAGE_NAME }}
          tags: |
            type=sha

      - name: Build and push API
        uses: docker/build-push-action@v2
        with:
          context: src/api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-proxy:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Check out source code (shared)
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH_REF }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.PROXY_IMAGE_NAME }}
          tags: |
            type=sha

      - name: Build and push API
        uses: docker/build-push-action@v2
        with:
          context: src/proxy
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-clients:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Check out source code (shared)
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH_REF }}

      - name: Configure client UI filters
        run: |
          cp deploy/next/config/client-filters.json src/clients/client-filters.json

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.CLIENTS_IMAGE_NAME }}
          tags: |
            type=sha

      - name: Build and push clients
        uses: docker/build-push-action@v2
        with:
          context: src/clients
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: [build-api, build-proxy, build-clients]
    runs-on: github-runner.saeon.int
    steps:
      - name: Check out source code (shared)
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH_REF }}

      - name: (SCP) Copy stack configuration to app server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOSTNAME }}
          username: ${{ secrets.DEPLOYMENT_HOST_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_HOST_PASSWORD }}
          port: ${{ secrets.DEPLOYMENT_HOST_SSH_PORT }}
          source: 'deploy/next/'
          target: 'sdp-next'

      - name: (SSH) Deploy stack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOSTNAME }}
          username: ${{ secrets.DEPLOYMENT_HOST_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_HOST_PASSWORD }}
          port: ${{ secrets.DEPLOYMENT_HOST_SSH_PORT }}
          script: |
            echo "API_IMAGE=${{ needs.build-api.outputs.image }}" > /home/runner/sdp-next/deploy/next/docker-compose.env
            echo "PROXY_IMAGE=${{ needs.build-proxy.outputs.image }}" >> /home/runner/sdp-next/deploy/next/docker-compose.env
            echo "CLIENTS_IMAGE=${{ needs.build-clients.outputs.image }}" >> /home/runner/sdp-next/deploy/next/docker-compose.env
            echo "SAEON_AUTH_CLIENT_SECRET=${{ secrets.SAEON_AUTH_CLIENT_SECRET }}" >> /home/runner/sdp-next/deploy/next/docker-compose.env
            echo "APP_KEY=${{ secrets.APP_KEY }}" >> /home/runner/sdp-next/deploy/docker-compose.env
            echo "MONGO_DB_PASSWORD=${{ secrets.MONGO_DB_DEV_PASSWORD }}" >> /home/runner/sdp-next/deploy/docker-compose.env
            echo "MONGO_DB_USERNAME=${{ secrets.MONGO_DB_DEV_USERNAME }}" >> /home/runner/sdp-next/deploy/docker-compose.env
            echo "ODP_CLIENT_SECRET=${{ secrets.ODP_CLIENT_SECRET_NEXT }}" >> /home/runner/sdp-next/deploy/docker-compose.env
            echo "ODP_SSO_CLIENT_SECRET=${{ secrets.ODP_SSO_CLIENT_SECRET_NEXT}}" >> /home/runner/sdp-next/deploy/docker-compose.env
            echo "POSTGIS_PASSWORD=${{ secrets.POSTGIS_PASSWORD }}" >> /home/runner/sdp-next/deploy/docker-compose.env
            echo "POSTGIS_USERNAME=${{ secrets.POSTGIS_USERNAME }}" >> /home/runner/sdp-next/deploy/docker-compose.env
            echo "POSTGIS_USERNAME_PUBLIC=${{ secrets.POSTGIS_USERNAME_PUBLIC }}" >> /home/runner/sdp-next/deploy/docker-compose.env
            echo "POSTGIS_PASSWORD_PUBLIC=${{ secrets.POSTGIS_PASSWORD_PUBLIC }}" >> /home/runner/sdp-next/deploy/docker-compose.env            
            sudo /opt/deploy-docker-stack.sh /home/runner/sdp-next/deploy/next/docker-compose.yml /home/runner/sdp-next/deploy/next/docker-compose.env sdp_next
