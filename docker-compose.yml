version: '3.8'

volumes:
  mongo:
    driver: local
  elasticsearch:
    driver: local
  postgis:
    driver: local

services:
  elasticsearch:
    container_name: elasticsearch
    restart: always
    image: $ELASTICSEARCH_IMAGE
    environment:
      - xpack.security.enabled=false
      - xpack.license.self_generated.type=basic
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    container_name: kibana
    restart: always
    image: $KIBANA_IMAGE
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  mongo:
    container_name: mongo
    restart: always
    image: $MONGO_IMAGE
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_DB_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_DB_PASSWORD
    volumes:
      - mongo:/data/db/
    ports:
      - 27017:27017

  postgis:
    image: $POSTGIS_IMAGE
    container_name: postgis
    environment:
      POSTGRES_USER: $POSTGIS_USERNAME
      POSTGRES_PASSWORD: $POSTGIS_PASSWORD
      POSTGRES_DB: catalogue
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - 5442:5432
    volumes:
      - postgis:/var/lib/postgresql/data/pgdata

  proxy:
    container_name: proxy
    restart: always
    build:
      context: src/services/proxy
      dockerfile: Dockerfile
      args:
        ELASTICSEARCH_ADDRESS: $ELASTICSEARCH_ADDRESS
        CATALOGUE_LATEST_COMMIT: $CATALOGUE_LATEST_COMMIT
    ports:
      - 8001:8001
      - 8002:8002
    depends_on:
      - elasticsearch

  api:
    container_name: api
    restart: always
    build:
      context: src/services/api
      dockerfile: Dockerfile
      args:
        CATALOGUE_DOCKER_NETWORK: $CATALOGUE_DOCKER_NETWORK
        CATALOGUE_API_ODP_CLIENT_SECRET: $CATALOGUE_API_ODP_CLIENT_SECRET
        MONGO_DB_ADDRESS: $MONGO_DB_ADDRESS
        MONGO_DB_USERNAME: $MONGO_DB_USERNAME
        MONGO_DB_PASSWORD: $MONGO_DB_PASSWORD
        POSTGIS_HOST: $POSTGIS_HOST
        POSTGIS_PORT: $POSTGIS_PORT            
        POSTGIS_USERNAME: $POSTGIS_USERNAME
        POSTGIS_PASSWORD: $POSTGIS_PASSWORD
        ELASTICSEARCH_ADDRESS: $ELASTICSEARCH_ADDRESS
        CATALOGUE_PROXY_ADDRESS: $CATALOGUE_PROXY_ADDRESS
        CATALOGUE_DEPLOYMENT_ENV: $CATALOGUE_DEPLOYMENT_ENV
        CATALOGUE_API_RESET_POSTGIS: $CATALOGUE_API_RESET_POSTGIS
        CATALOGUE_API_ALLOWED_ORIGINS: $CATALOGUE_API_ALLOWED_ORIGINS
        CATALOGUE_API_GQL_ADDRESS: $CATALOGUE_API_GQL_ADDRESS        
        CATALOGUE_API_RESET_ELASTICSEARCH_TEMPLATE: $CATALOGUE_API_RESET_ELASTICSEARCH_TEMPLATE
        CATALOGUE_API_RESET_ELASTICSEARCH_INDEX: $CATALOGUE_API_RESET_ELASTICSEARCH_INDEX
        CATALOGUE_LATEST_COMMIT: $CATALOGUE_LATEST_COMMIT
        ODP_ADDRESS: $ODP_ADDRESS
    ports:
      - 5000:3000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/:/tmp
    depends_on:
      - proxy
      - mongo
      - elasticsearch
      - postgis

  client:
    container_name: client
    restart: always
    build:
      context: src/services/client
      dockerfile: Dockerfile
      args:
        CATALOGUE_DEPLOYMENT_ENV: $CATALOGUE_DEPLOYMENT_ENV
        CATALOGUE_LATEST_COMMIT: $CATALOGUE_LATEST_COMMIT        
        CATALOGUE_API_ADDRESS: $CATALOGUE_API_ADDRESS
        CATALOGUE_API_GQL_ADDRESS: $CATALOGUE_API_GQL_ADDRESS
        CATALOGUE_API_GQL_SUBSCRIPTIONS_ADDRESS: $CATALOGUE_API_GQL_SUBSCRIPTIONS_ADDRESS
        CATALOGUE_CLIENT_AUTH_REDIRECT_URL: $CATALOGUE_CLIENT_AUTH_REDIRECT_URL
        CATALOGUE_CLIENT_ADDRESS: $CATALOGUE_CLIENT_ADDRESS
        CATALOGUE_CLIENT_DEFAULT_NOTICES: $CATALOGUE_CLIENT_DEFAULT_NOTICES        
    ports:
      - 5001:80
    depends_on:
      - api
