version: '3.8'

networks:
  catalogue_default:
    name: $CATALOGUE_DOCKER_NETWORK

volumes:
  mongo:
    driver: local
  elasticsearch:
    driver: local
  postgis:
    driver: local
  var:
    driver: local
  tmp:
    driver: local

services:
  elasticsearch:
    container_name: elasticsearch
    restart: always
    image: $ELASTICSEARCH_IMAGE
    environment:
      - xpack.security.enabled=false
      - xpack.license.self_generated.type=basic
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - $CATALOGUE_DOCKER_NETWORK

  kibana:
    container_name: kibana
    restart: always
    image: $KIBANA_IMAGE
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - $CATALOGUE_DOCKER_NETWORK      

  mongo:
    container_name: mongo
    restart: always
    image: $MONGO_IMAGE
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_DB_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_DB_PASSWORD
    volumes:
      - mongo:/data/db/
    ports:
      - 27017:27017
    networks:
      - $CATALOGUE_DOCKER_NETWORK      

  postgis:
    container_name: postgis
    restart: always
    build:
      context: src/services/postgis
      dockerfile: Dockerfile
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: $POSTGIS_DB
      POSTGRES_PASSWORD: $POSTGIS_PASSWORD
      POSTGRES_USER: $POSTGIS_USERNAME
    ports:
      - $POSTGIS_CONTAINER_HOST_PORT:$POSTGIS_PORT
    volumes:
      - postgis:/var/lib/postgresql/data/pgdata
      - var:/var/lib/catalogue-api
    networks:
      - $CATALOGUE_DOCKER_NETWORK      

  proxy:
    container_name: proxy
    restart: always
    build:
      context: src/services/proxy
      dockerfile: Dockerfile
      args:
        CATALOGUE_LATEST_COMMIT: $CATALOGUE_LATEST_COMMIT
        ELASTICSEARCH_ADDRESS: $ELASTICSEARCH_ADDRESS
    ports:
      - 8001:8001
      - 8002:8002
    depends_on:
      - elasticsearch
    networks:
      - $CATALOGUE_DOCKER_NETWORK

  api:
    container_name: api
    restart: always
    build:
      context: src/services/api
      dockerfile: Dockerfile
      args:
        CATALOGUE_API_TWITTER_CLIENT_ID: $CATALOGUE_API_TWITTER_CLIENT_ID
        CATALOGUE_API_TWITTER_CLIENT_SECRET: $CATALOGUE_API_TWITTER_CLIENT_SECRET
        CATALOGUE_API_TWITTER_OAUTH_REDIRECT_ADDRESS: $CATALOGUE_API_TWITTER_OAUTH_REDIRECT_ADDRESS
        CATALOGUE_API_ODP_USER_AUTH_CLIENT_ID: $CATALOGUE_API_ODP_USER_AUTH_CLIENT_ID
        CATALOGUE_API_ODP_USER_AUTH_CLIENT_SECRET: $CATALOGUE_API_ODP_USER_AUTH_CLIENT_SECRET
        CATALOGUE_API_ODP_USER_AUTH_CLIENT_SCOPES: $CATALOGUE_API_ODP_USER_AUTH_CLIENT_SCOPES
        CATALOGUE_API_ODP_USER_AUTH_CLIENT_REDIRECT_ADDRESS: $CATALOGUE_API_ODP_USER_AUTH_CLIENT_REDIRECT_ADDRESS
        CATALOGUE_API_INTERNAL_ADDRESS: $CATALOGUE_API_INTERNAL_ADDRESS
        CATALOGUE_DEFAULT_ADMIN_EMAIL_ADDRESSES: $CATALOGUE_DEFAULT_ADMIN_EMAIL_ADDRESSES
        CATALOGUE_API_ALLOWED_ORIGINS: $CATALOGUE_API_ALLOWED_ORIGINS
        CATALOGUE_API_KEY: $CATALOGUE_API_KEY
        CATALOGUE_API_GOOGLE_CLIENT_ID: $CATALOGUE_API_GOOGLE_CLIENT_ID
        CATALOGUE_API_GOOGLE_CLIENT_SECRET: $CATALOGUE_API_GOOGLE_CLIENT_SECRET
        CATALOGUE_API_ADDRESS: $CATALOGUE_API_ADDRESS
        CATALOGUE_API_NODE_ENV: $CATALOGUE_API_NODE_ENV
        CATALOGUE_API_GOOGLE_OAUTH_REDIRECT_ADDRESS: $CATALOGUE_API_GOOGLE_OAUTH_REDIRECT_ADDRESS
        CATALOGUE_API_ODP_CLIENT_SECRET: $CATALOGUE_API_ODP_CLIENT_SECRET
        CATALOGUE_API_ODP_FILTER_PATH: $CATALOGUE_API_ODP_FILTER_PATH
        CATALOGUE_API_RESET_POSTGIS: $CATALOGUE_API_RESET_POSTGIS
        CATALOGUE_CURATOR_CONTACT: $CATALOGUE_CURATOR_CONTACT
        CATALOGUE_TECHNICAL_CONTACT: $CATALOGUE_TECHNICAL_CONTACT
        CATALOGUE_DEPLOYMENT_ENV: $CATALOGUE_DEPLOYMENT_ENV
        CATALOGUE_DOCKER_NETWORK: $CATALOGUE_DOCKER_NETWORK
        CATALOGUE_LATEST_COMMIT: $CATALOGUE_LATEST_COMMIT
        CATALOGUE_PROXY_ADDRESS: $CATALOGUE_PROXY_ADDRESS
        ELASTICSEARCH_ADDRESS: $ELASTICSEARCH_ADDRESS
        MONGO_DB_ADDRESS: $MONGO_DB_ADDRESS
        MONGO_DB_PASSWORD: $MONGO_DB_PASSWORD
        MONGO_DB_USERNAME: $MONGO_DB_USERNAME
        ODP_ADDRESS: $ODP_ADDRESS
        POSTGIS_DB: $POSTGIS_DB
        POSTGIS_HOST: $POSTGIS_HOST
        POSTGIS_PASSWORD: $POSTGIS_PASSWORD
        POSTGIS_PORT: $POSTGIS_PORT            
        POSTGIS_USERNAME: $POSTGIS_USERNAME
    ports:
      - $CATALOGUE_API_CONTAINER_PORT_MAPPING:3000
      - $CATALOGUE_API_CONTAINER_INTERNAL_PORT_MAPPING:4000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - tmp:/tmp
      - var:/var/lib/catalogue-api
    depends_on:
      - proxy
      - mongo
      - elasticsearch
      - postgis
    networks:
      - $CATALOGUE_DOCKER_NETWORK      

  client:
    container_name: client
    restart: always
    build:
      context: src/services/client
      dockerfile: Dockerfile
      args:
        CATALOGUE_API_ADDRESS: $CATALOGUE_API_ADDRESS
        CATALOGUE_CLIENT_ADDRESS: $CATALOGUE_CLIENT_ADDRESS
        CATALOGUE_CLIENT_DEFAULT_NOTICES: $CATALOGUE_CLIENT_DEFAULT_NOTICES
        CATALOGUE_CLIENT_FILTER_CONFIG_PATH: $CATALOGUE_CLIENT_FILTER_CONFIG_PATH
        CATALOGUE_CURATOR_CONTACT: $CATALOGUE_CURATOR_CONTACT
        CATALOGUE_TECHNICAL_CONTACT: $CATALOGUE_TECHNICAL_CONTACT
        CATALOGUE_DEPLOYMENT_ENV: $CATALOGUE_DEPLOYMENT_ENV
        CATALOGUE_LATEST_COMMIT: $CATALOGUE_LATEST_COMMIT
        CATALOGUE_LEGAL_CONTACT: $CATALOGUE_LEGAL_CONTACT
    ports:
      - $CATALOGUE_CLIENT_CONTAINER_PORT_MAPPING:80
    depends_on:
      - api
    networks:
      - $CATALOGUE_DOCKER_NETWORK      
