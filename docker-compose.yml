version: '3.8'

networks:
  catalogue_default:
    name: $DOCKER_NETWORK

volumes:
  mongo:
    driver: local
  postgis:
    driver: local
  data:
    driver: local
  tmp:
    driver: local

services:
  mongo:
    container_name: mongo
    restart: always
    image: $MONGO_IMAGE
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_DB_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_DB_PASSWORD
    volumes:
      - mongo:/data/db/
    ports:
      - 27017:27017
    networks:
      - $DOCKER_NETWORK
    command: --wiredTigerCacheSizeGB=2 --dbpath /data/db

  postgis:
    image: $POSTGIS_IMAGE_NAME
    container_name: $POSTGIS_CONTAINER_NAME
    restart: always
    build:
      context: src/postgis
      dockerfile: Dockerfile
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: $POSTGIS_DB
      POSTGRES_PASSWORD: $POSTGIS_PASSWORD
      POSTGRES_USER: $POSTGIS_USERNAME
    ports:
      - $POSTGIS_CONTAINER_HOST_PORT:$POSTGIS_PORT
    volumes:
      - postgis:/var/lib/postgresql/data/pgdata
      - data:/var/lib/catalogue-api
    networks:
      - $DOCKER_NETWORK

  proxy:
    container_name: proxy
    restart: always
    build:
      context: src/proxy
      dockerfile: Dockerfile
      args:
        LATEST_COMMIT: $LATEST_COMMIT
        ELASTICSEARCH_ADDRESS: $ELASTICSEARCH_ADDRESS
    ports:
      - 8001:8001
      - 8002:8002
    networks:
      - $DOCKER_NETWORK

  api:
    container_name: api
    restart: always
    build:
      context: src/api
      dockerfile: Dockerfile
      args:
        LOG_QUERY_DETAILS: $LOG_QUERY_DETAILS
        GDAL_DOCKER_IMAGE: $GDAL_DOCKER_IMAGE
        POSTGIS_CONTAINER_NAME: $POSTGIS_CONTAINER_NAME
        POSTGIS_IMAGE_NAME: $POSTGIS_IMAGE_NAME
        DOCKER_DATA_VOLUME: $DOCKER_DATA_VOLUME
        DOCKER_TMP_VOLUME: $DOCKER_TMP_VOLUME
        HOSTNAME: $HOSTNAME
        DEFAULT_SYSADMIN_EMAIL_ADDRESSES: $DEFAULT_SYSADMIN_EMAIL_ADDRESSES
        ODP_SSO_CLIENT_ID: $ODP_SSO_CLIENT_ID
        ODP_SSO_CLIENT_SECRET: $ODP_SSO_CLIENT_SECRET
        ODP_SSO_CLIENT_SCOPES: $ODP_SSO_CLIENT_SCOPES
        DEFAULT_ADMIN_EMAIL_ADDRESSES: $DEFAULT_ADMIN_EMAIL_ADDRESSES
        ALLOWED_ORIGINS: $ALLOWED_ORIGINS
        APP_KEY: $APP_KEY
        API_PUBLIC_ADDRESS: $API_PUBLIC_ADDRESS
        NODE_ENV: $NODE_ENV
        ODP_CLIENT_SECRET: $ODP_CLIENT_SECRET
        ODP_FILTER_PATH: $ODP_FILTER_PATH
        CURATOR_CONTACT: $CURATOR_CONTACT
        TECHNICAL_CONTACT: $TECHNICAL_CONTACT
        DEPLOYMENT_ENV: $DEPLOYMENT_ENV
        DOCKER_NETWORK: $DOCKER_NETWORK
        LATEST_COMMIT: $LATEST_COMMIT
        ELASTICSEARCH_ADDRESS: $ELASTICSEARCH_ADDRESS
        MONGO_DB_ADDRESS: $MONGO_DB_ADDRESS
        MONGO_DB_PASSWORD: $MONGO_DB_PASSWORD
        MONGO_DB_USERNAME: $MONGO_DB_USERNAME
        ODP_ADDRESS: $ODP_ADDRESS
        NODE_TLS_REJECT_UNAUTHORIZED: $NODE_TLS_REJECT_UNAUTHORIZED
        POSTGIS_DB: $POSTGIS_DB
        POSTGIS_HOST: $POSTGIS_HOST
        POSTGIS_PASSWORD: $POSTGIS_PASSWORD
        POSTGIS_PORT: $POSTGIS_PORT
        POSTGIS_USERNAME: $POSTGIS_USERNAME
    ports:
      - $API_EXPORT_PORT_PUBLIC:3000
      - $API_EXPORT_PORT_INTERNAL:4000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - tmp:/tmp/catalogue-api
      - data:/var/lib/catalogue-api
    depends_on:
      - mongo
      - postgis
    networks:
      - $DOCKER_NETWORK

  clients_internal:
    container_name: clients_internal
    restart: always
    build:
      context: src/clients
      dockerfile: Dockerfile
      args:
        CURATION_TOOLS_NGINX_SERVER_NAME: $CURATION_TOOLS_NGINX_SERVER_NAME
        CATALOGUE_NGINX_SERVER_NAME: $CATALOGUE_NGINX_SERVER_NAME
        SUBDOMAIN_APP_ENTRIES: $SUBDOMAIN_APP_ENTRIES
        PROXY_ADDRESS: $PROXY_ADDRESS
        API_PUBLIC_ADDRESS: $API_PUBLIC_ADDRESS
        CLIENTS_PUBLIC_ADDRESS: $CLIENTS_PUBLIC_ADDRESS
        CLIENTS_DEFAULT_NOTICES: $CLIENTS_DEFAULT_NOTICES
        CLIENTS_SEARCH_FILTER_CONFIG_PATH: $CLIENTS_SEARCH_FILTER_CONFIG_PATH
        CURATOR_CONTACT: $CURATOR_CONTACT
        TECHNICAL_CONTACT: $TECHNICAL_CONTACT
        DEPLOYMENT_ENV: $DEPLOYMENT_ENV
        LATEST_COMMIT: $LATEST_COMMIT
        LEGAL_CONTACT: $LEGAL_CONTACT
    ports:
      - $CLIENTS_EXPORT_PORT_INTERNAL:80
    volumes:
      - /etc/nginx/docker/clients-internal.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
      - proxy
    networks:
      - $DOCKER_NETWORK

  clients_public:
    container_name: clients_public
    restart: always
    build:
      context: src/clients
      dockerfile: Dockerfile
      args:
        CURATION_TOOLS_NGINX_SERVER_NAME: $CURATION_TOOLS_NGINX_SERVER_NAME
        CATALOGUE_NGINX_SERVER_NAME: $CATALOGUE_NGINX_SERVER_NAME
        SUBDOMAIN_APP_ENTRIES: $SUBDOMAIN_APP_ENTRIES
        PROXY_ADDRESS: $PROXY_ADDRESS
        API_PUBLIC_ADDRESS: $API_PUBLIC_ADDRESS
        API_INTERNAL_ADDRESS: $API_INTERNAL_ADDRESS
        CLIENTS_PUBLIC_ADDRESS: $CLIENTS_PUBLIC_ADDRESS
        CLIENTS_DEFAULT_NOTICES: $CLIENTS_DEFAULT_NOTICES
        CLIENTS_SEARCH_FILTER_CONFIG_PATH: $CLIENTS_SEARCH_FILTER_CONFIG_PATH
        CURATOR_CONTACT: $CURATOR_CONTACT
        TECHNICAL_CONTACT: $TECHNICAL_CONTACT
        DEPLOYMENT_ENV: $DEPLOYMENT_ENV
        LATEST_COMMIT: $LATEST_COMMIT
        LEGAL_CONTACT: $LEGAL_CONTACT
    ports:
      - $CLIENTS_EXPORT_PORT_PUBLIC:80
    volumes:
      - /etc/nginx/docker/clients-public.conf:/etc/nginx/conf.d/default.conf      
    depends_on:
      - api
      - proxy
    networks:
      - $DOCKER_NETWORK
