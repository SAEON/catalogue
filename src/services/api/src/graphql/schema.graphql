# https://itnext.io/improve-your-graphql-schema-with-the-relay-specification-8952d06998eb

scalar DateTime
scalar JSON
scalar Void

enum Type {
  Map
  BrowserEvent
  SearchResult
}

interface Node {
  id: ID!
  type: Type!
}

# Types of Nodes

type Map implements Node {
  id: ID!
  name: String
  type: Type!
}

type BrowserEvent implements Node {
  id: ID!
  name: String!
  createdAt: DateTime
  info: JSON!
  type: Type!
}

type SearchResult implements Node {
  id: ID!
  type: Type!
}

# General Types

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type SearchEdge {
  cursor: String!
  node: SearchResult!
}

type SearchConnection {
  edges: [SearchEdge!]!
  pageInfo: PageInfo!
}

# Inputs

input MapInput {
  name: String
}

input BrowserEventInput {
  name: String!
  createdAt: DateTime!
  info: JSON!
}

type ES_Aggregation {
  key: String!
  doc_count: Int!
}

# GraphQL types

type Query {
  # Catalogue
  catalogue(id: String, subjects: [String!]): [JSON]!
  catalogueThemes: [ES_Aggregation]!
  catalogueFieldAggregation(fields: [String!], subjects: [String!]): JSON

  map(id: ID!): Node
  maps: [Node]!
  browserEvents: [Node]!
  search(
    dsl: JSON! # Elasticsearch DSL query
    after: String
    before: String
    first: Int
    last: Int
  ): SearchConnection!
}

type Subscription {
  onFilterChange: JSON
}

type Mutation {
  upsertMap(input: MapInput!, id: ID): Node!
  logBrowserEvents(input: [BrowserEventInput]!): [Boolean]!
}
