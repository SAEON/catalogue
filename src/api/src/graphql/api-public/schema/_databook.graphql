type Databook {
  id: ID!
  tables: JSON
  schema: PostgisDatabookSchema!
  dashboards: [Dashboard!]
  charts: [Chart!]
  filters: [Filter!]
  """
  Returns a sub-document with a field 'id' that is a hash. This value changes to reflect status change
  """
  statusHash: StatusHash!
  editors: JSON
  """
  Mark a Postgres object as public. This allows for publicly executing SQL on this object
  """
  markSchemaObjectPublic(object: String!): Boolean!
}

type Dashboard {
  id: ID!
  title: String
  subtitle: String
  description: String
  databookId: ID!
  """
  Associate an existing chart with this dashboard
  """
  addChart(id: ID!): Dashboard!
  """
  Remove a chart's association with this dashboard
  """
  removeChart(id: ID!): Dashboard!
  """
  Associate an existing filter with this dashboard
  """
  addFilter(id: ID!): Dashboard!
  """
  Remove a filter's association with this dashboard
  """
  removeFilter(id: ID!): Dashboard!
  charts: [Chart!]
  filters: [Filter!]
  layout: JSON
}

type PostgisDatabookSchema {
  id: ID!
  databook: JSON!
  tables(id: ID): [PostgisDatabookTable]!
}

type PostgisDatabookTable {
  id: ID!
  description: String
  table_schema: String!
  databook: JSON!
  odpRecordId: String
  updateTableName(name: String!): Boolean!
  fields(id: ID): [PostgisDatabookField]
}

type PostgisDatabookField {
  id: ID!
  databook: JSON!
  column_name: String!
  updateFieldName(name: String!): Boolean!
  data_type: String!
  ordinal_position: Int!
}

type Filter {
  id: ID!
  name: String
  columnFiltered: String
  values: [String]
  sql: String
}
