scalar DateTime
scalar JSON
scalar Email
scalar Void
scalar WKT_4326
scalar FunctionString

type PageInfo {
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: JSON
  endCursor: JSON
}

#  Types
enum DateBucket {
  minute
  hour
  day
  month
  year
}

enum SortDirection {
  ASC
  DESC
}

enum DownloadsReportDimensions {
  doi
  clientSession
  clientIpAddress
  clientIpLocation
  clientUserAgent
  clientPathname
  referrer
  date
  count
}

input SortConfig {
  dimension: DownloadsReportDimensions
  direction: SortDirection
}

type LogAggregation {
  """
  DOI of metadata record (or SAEON id if no DOI)
  """
  doi: ID
  clientSession: String
  clientIpAddress: String
  """
  Resolve an IP Address to location using https://ip-api.com/
  """
  clientIpLocation: String
  clientUserAgent: String
  clientPathname: String
  referrer: String
  """
  Download date, rounded down to the hour
  """
  date(bucket: DateBucket): DateTime!
  count: Int!
  """
  Event type
  """
  type: LogType
}

enum ListType {
  curated
  public
}

type List {
  id: ID!
  filter: JSON
  title: String
  description: String
  referrer: String
  url: String
  createdBy: String
  disableSidebar: Boolean
  showSearchBar: Boolean
  type: ListType
}

type Query {
  """
  Return the Catalogue entity with optional input for indicating source where the catalogue software was linked from
  """
  catalogue(referrer: String): Catalogue!
  """
  Retrieve search context (i.e. a dynamic list)
  """
  list(id: ID): List
  """
  Retrieve many search contexts (i.e. many dynamic lists)
  """
  lists(filter: String): [List!]!
  logs(type: LogType, sort: SortConfig): [LogAggregation]!
  usageReport: JSON
  loginsReport: JSON
  userFormSubmissions: JSON
  roles: [Role]!
  permissions: [Permission]!
  users: [User]!
  user(id: ID!): User
}

input DataDownloadFormSubmission {
  """
  DOI (or ID if no DOI) of the metadataRecord related to the downloaded dataset
  """
  recordId: ID!
  emailAddress: Email
  organization: String
  race: String
  gender: String
  location: String
  ageGroup: String
  comments: String
  allowContact: Boolean
  student: Boolean
}

type Mutation {
  submitDataDownloadForm(input: DataDownloadFormSubmission!): Void
  logBrowserEvents(input: [BrowserEventInput]!): Void
  """
  Delete a saved list (only curated lists can be deleted)
  """
  deleteList(id: ID!): Boolean!
  """
  Save a search context (i.e. a dynamic list)
  """
  saveList(
    id: ID
    filter: JSON
    createdBy: String!
    type: ListType
    title: String
    description: String
  ): List!
  assignRolesToUser(userId: ID!, roleIds: [ID!]!): User!
}

input BrowserEventInput {
  type: String!
  """
  If the createdAt field is not included in the browser request it is created at insertion time (to )
  """
  createdAt: DateTime
  info: JSON!
  clientVersion: String!
  referrer: String
}
